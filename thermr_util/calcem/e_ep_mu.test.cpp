#define CATCH_CONFIG_MAIN
#include "../../catch.hpp"
#include "e_ep_mu.h"


TEST_CASE( "Branch to handle E-E'-mu ordering" ){
  GIVEN( "inputs" ){
    int math = 1065, matdp = 1306, mtref = 229, ncds = 0, iinc = 2, lat = 1, 
        lasym = 0, nnl = -9;
    double teff = 713.39, teff2 = 0.0, za = 6000.0, awr = 11.8969, emax = 1.2, 
        cliq = 0.0, t = 296.0, tol = 5e-2, az = 11.9, az2 = 0.0, 
        sb = 5.5348570016241778, sb2 = 0.0;
    std::vector<double> scr( 500000, 0.0 ), esi( 95, 0.0 ), xsi( 95, 0.0 );

    std::vector<double> alpha { 0.25203, 0.50406, 0.75609, 1.00812, 1.26015, 1.51218, 1.76421, 2.01624, 2.27331, 2.53552, 2.80297, 3.07577, 3.35401, 3.63790, 3.92733, 4.22271, 4.52383, 4.83111, 5.14443, 5.46411, 5.79013, 6.12261, 6.46185, 6.80783, 7.16077, 7.52067, 7.88783, 8.26234, 8.64432, 9.03396, 9.43136, 9.83673, 10.2506, 10.6719, 11.1024, 11.5409, 11.9886, 12.4452, 12.911, 13.3858 }, beta { 0.0, 0.100812, 0.201624, 0.302436, 0.403248, 0.50406, 0.604872, 0.705684, 0.806496, 0.907307, 1.00812, 1.10893, 1.20974, 1.31055, 1.41137, 1.51218, 1.61299, 1.71380, 1.81461, 1.91543, 2.01624, 2.11705, 2.21786, 2.31867, 2.41949, 2.5203, 2.62111, 2.72192, 2.82273, 2.92354, 3.02436, 3.12517, 3.22598, 3.32679, 3.42760, 3.52842, 3.62923, 3.73004, 3.83085, 3.93167, 4.03248, 4.13329, 4.24378, 4.36485, 4.49762, 4.64309, 4.80248, 4.97719, 5.16873, 5.37862, 5.60867, 5.8608, 6.13713, 6.43997, 6.77184, 7.13567, 7.53438, 7.97140, 8.45036, 8.97529, 9.55052, 10.181, 10.8726, 11.6297, 12.4593, 13.3697, 14.3667, 15.4595, 16.6571, 17.9697, 19.4093, 20.9860, 22.7139, 24.6082, 26.6849, 28.9602, 31.4533, 34.1873, 37.1825, 40.4659 };
    std::vector<std::vector<double>> sab ( alpha.size(), std::vector<double> (beta.size()));
    for ( int i = 0; i < alpha.size(); ++i ){
      for ( int j = 0; j < beta.size(); ++j ){
        sab[i][j] = 0.5*i + 0.1*j;
      }
    }


    e_ep_mu(math, matdp, teff, teff2, scr, mtref, za, awr, ncds, emax, cliq, iinc, lat, esi, xsi, lasym, alpha, beta, sab, t, tol, az, az2, sb, sb2, nnl );


    REQUIRE( true );
  } // GIVEN
} // TEST CASE

