#define CATCH_CONFIG_MAIN
#include "../../catch.hpp"
#include "sigcoh.h"


TEST_CASE( "sigcoh" ){
  std::vector<double> wrk_1_100 (100);
  GIVEN( "" ){
    double e = 0, enext = 0, temp = 296, emax = 1.2;
    int nl = 1, lat = 1, natom = 1;
    std::vector<double> s (6, 0.0);
    auto wrk = sigcoh( e, enext, s, nl, lat, temp, emax, natom );
    wrk_1_100= { 8.794479e15, 0.000000000, 8.794479e15, 0.000000000, 
      3.5177917e16, 2.0984634e-8, 3.5177917e16, 2.0984634e-8, 7.9150313e16, 
      0.0000000000, 7.9150313e16, 0.0000000000, 1.4071166e17, 9.9954151e-9, 
      1.4071166e17, 9.9954151e-9, 2.1986198e17, 0.0000000000, 2.1986198e17, 
      0.0000000000, 3.1660125e17, 6.1459915e-9, 3.1660125e17, 6.1459915e-9, 
      4.3092948e17, 0.0000000000, 4.3092948e17, 0.0000000000, 5.6284667e17, 
      4.1161249e-9, 5.6284667e17, 4.1161249e-9, 7.1235282e17, 0.00000000000, 
      7.1235282e17, 0.0000000000, 8.7944793e17, 2.8468646e-9, 8.79447930e17, 
      2.8468646e-9, 1.0641319e18, 5.5651613e-8, 1.2664050e18, 1.5452294e-8, 
      1.4862670e18, 2.2910301e-8, 1.7237179e18, 1.0870801e-8, 1.9787578e18, 
      3.1633621e-8, 2.2513867e18, 2.5631059e-8, 2.5416045e18, 1.5564767e-8, 
      2.8494112e18, 2.1705285e-8, 3.1748070e18, 2.7344287e-8, 3.5177917e18, 
      3.9230362e-8, 3.8783653e18, 2.4233465e-8, 4.2565279e18, 2.7239754e-8, 
      4.6522795e18, 2.3853718e-8, 5.0656200e18, 2.1068192e-8, 5.4965495e18, 
      1.9383522e-8, 5.9450680e18, 1.4768674e-8, 6.4111754e18, 1.2013965e-8, 
      6.8948717e18, 1.4676085e-8, 7.3961570e18, 9.4021180e-9, 7.9150313e18, 
      8.2634488e-9, 8.4514946e18, 6.4318789e-9, 9.0055468e18, 5.8988019e-9, 
      9.5771879e18, 5.3223846e-9, 1.0166418e19, 3.9873042e-9, 1.0773237e19, 
      3.0427961e-9, 1.1397645e19, 2.3740779e-9, 1.2039642e19, 1.7570369e-9, 
      1.2699228e19, 1.5332145e-9, 1.3376403e19, 1.1634285e-9, 1.4071166e19, 
      7.8460962e-10 };
    for ( size_t i = 0; i < 100; ++i ){ 
      REQUIRE( wrk_1_100[i] == Approx( wrk[i] ).epsilon(1e-6) );
    }
    WHEN( "" ){
      REQUIRE( true );
      
    } // WHEN
  } // GIVEN
} // TEST CASE
