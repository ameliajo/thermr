#define CATCH_CONFIG_MAIN
#include "catch.hpp"
#include "coh/coh.h"


TEST_CASE( "coh" ){
  GIVEN( "" ){
    WHEN( "" ){
      double temp = 296.0, emax = 0.625;
      int lat = 1, numAtoms = 1;
      double tol = 5e-2;
      std::vector<double> eGrid;
      eGrid = { 1.0000E-5, 1.0625E-5, 1.1250E-5, 1.1875E-5, 1.2500E-5, 1.3750E-5, 
        1.5000E-5, 1.6250E-5, 1.7500E-5, 1.8750E-5, 2.0000E-5, 2.1875E-5, 
        2.3750E-5, 2.5625E-5, 2.7500E-5, 2.9375E-5, 3.1250E-5, 3.3125E-5, 
        3.5000E-5, 3.8750E-5, 4.2500E-5, 4.6250E-5, 5.0000E-5, 5.3125E-5, 
        5.6250E-5, 5.9375E-5, 6.2500E-5, 6.8750E-5, 7.5000E-5, 8.1250E-5, 
        8.7500E-5, 9.3750E-5, 1.0000E-4, 1.0625E-4, 1.1250E-4, 1.1875E-4, 
        1.2500E-4, 1.3750E-4, 1.5000E-4, 1.6250E-4, 1.7500E-4, 1.8750E-4, 
        2.0000E-4, 2.1875E-4, 2.3750E-4, 2.5625E-4, 2.7500E-4, 2.9375E-4, 
        3.1250E-4, 3.3125E-4, 3.5000E-4, 3.8750E-4, 4.2500E-4, 4.6250E-4, 
        5.0000E-4, 5.3125E-4, 5.6250E-4, 5.9375E-4, 6.2500E-4, 6.8750E-4, 
        7.5000E-4, 8.1250E-4, 8.7500E-4, 9.3750E-4, 1.0000E-3, 1.0625E-3, 
        1.1250E-3, 1.1875E-3, 1.2500E-3, 1.3750E-3, 1.5000E-3, 1.6250E-3, 
        1.7500E-3, 1.8750E-3, 2.0000E-3, 2.1875E-3, 2.3750E-3, 2.5625E-3, 
        2.7500E-3, 2.9375E-3, 3.1250E-3, 3.3125E-3, 3.5000E-3, 3.8750E-3, 
        4.2500E-3, 4.6250E-3, 5.0000E-3, 5.3125E-3, 5.6250E-3, 5.9375E-3, 
        6.2500E-3, 6.8750E-3, 7.5000E-3, 8.1250E-3, 8.7500E-3, 9.3750E-3, 
        1.0000E-2, 1.0625E-2, 1.1250E-2, 1.1875E-2, 1.2500E-2, 1.3750E-2, 
        1.5000E-2, 1.6250E-2, 1.7500E-2, 1.8750E-2, 2.0000E-2, 2.1325E-2, 
        2.2650E-2, 2.3975E-2, 2.5300E-2, 2.684375E-2, 2.838750E-2, 3.1475E-2, 
        3.4562E-2, 3.7650E-2, 4.0737E-2, 4.3825E-2, 4.691250E-2, 5.0000E-2, 
        5.3125E-2, 5.6250E-2, 5.9375E-2, 6.2500E-2, 6.8750E-2, 7.5000E-2, 
        8.1250E-2, 8.7500E-2, 9.3750E-2, 1.0000E-1, 1.0625E-1, 1.1250E-1, 
        1.1875E-1, 1.2500E-1, 1.3750E-1, 1.5000E-1, 1.6250E-1, 1.7500E-1, 
        1.8750E-1, 2.0000E-1, 2.1875E-1, 2.3750E-1, 2.5625E-1, 2.7500E-1, 
        2.9375E-1, 3.1250E-1, 3.3125E-1, 3.5000E-1, 3.8750E-1, 4.2500E-1, 
        5.0000E-1, 6.2500E-1, 6.250062E-1 };
      std::cout.precision(9);
      coh(temp,lat,emax,numAtoms,eGrid,tol);

      std::vector<double> correct_finalE { 1.000000-5, 1.062500-5, 1.125000-5, 1.187500-5, 1.250000-5, 1.375000-5, 1.500000-5, 1.625000-5, 1.750000-5, 1.875000-5, 2.000000-5, 2.187500-5, 2.375000-5, 2.562500-5, 2.750000-5, 2.937500-5, 3.125000-5, 3.312500-5, 3.500000-5, 3.875000-5, 4.250000-5, 4.625000-5, 5.000000-5, 5.312500-5, 5.625000-5, 5.937500-5, 6.250000-5, 6.875000-5, 7.500000-5, 8.125000-5, 8.750000-5, 9.375000-5, 1.000000-4, 1.062500-4, 1.125000-4, 1.187500-4, 1.250000-4, 1.375000-4, 1.500000-4, 1.625000-4, 1.750000-4, 1.875000-4, 2.000000-4, 2.187500-4, 2.375000-4, 2.562500-4, 2.750000-4, 2.937500-4, 3.125000-4, 3.312500-4, 3.500000-4, 3.875000-4, 4.250000-4, 4.555814-4, 4.555816-4, 4.625000-4, 5.000000-4, 5.312500-4, 5.625000-4, 5.937500-4, 6.250000-4, 6.875000-4, 7.500000-4, 8.125000-4, 8.750000-4, 9.375000-4, 1.000000-3, 1.062500-3, 1.125000-3, 1.187500-3, 1.250000-3, 1.375000-3, 1.500000-3, 1.625000-3, 1.750000-3, 1.822325-3, 1.822327-3, 1.875000-3, 2.000000-3, 2.187500-3, 2.375000-3, 2.562500-3, 2.750000-3, 2.937500-3, 3.125000-3, 3.312500-3, 3.500000-3, 3.875000-3, 4.100232-3, 4.100234-3, 4.250000-3, 4.515834-3, 4.515836-3, 4.625000-3, 4.971415-3, 4.971417-3, 5.000000-3, 5.312500-3, 5.625000-3, 5.937500-3, 6.250000-3, 6.338160-3, 6.338162-3, 6.875000-3, 7.289303-3, 7.289305-3, 7.500000-3, 8.125000-3, 8.616067-3, 8.616069-3, 8.750000-3, 9.375000-3, 1.000000-2, 1.062500-2, 1.125000-2, 1.138953-2, 1.138955-2, 1.180513-2, 1.180515-2, 1.187500-2, 1.250000-2, 1.354749-2, 1.354751-2, 1.375000-2, 1.400308-2, 1.400310-2, 1.500000-2, 1.536982-2, 1.536984-2, 1.590536-2, 1.590538-2, 1.625000-2, 1.640092-2, 1.640094-2, 1.750000-2, 1.764773-2, 1.764775-2, 1.806333-2, 1.806335-2, 1.851891-2, 1.851893-2, 1.875000-2, 1.988565-2, 1.988567-2, 2.000000-2, 2.083680-2, 2.083682-2, 2.091676-2, 2.091678-2, 2.132500-2, 2.216356-2, 2.216358-2, 2.232348-2, 2.232350-2, 2.265000-2, 2.397500-2, 2.493703-2, 2.493705-2, 2.530000-2, 2.535263-2, 2.535265-2, 2.683932-2, 2.683934-2, 2.684375-2, 2.838750-2, 2.915720-2, 2.915722-2, 2.945287-2, 2.945289-2, 2.994843-2, 2.994845-2, 3.147500-2, 3.161083-2, 3.161085-2, 3.206641-2, 3.206643-2, 3.343316-2, 3.343318-2, 3.367304-2, 3.367306-2, 3.446426-2, 3.446428-2, 3.456250-2, 3.571107-2, 3.571109-2, 3.587099-2, 3.587101-2, 3.690209-2, 3.690211-2, 3.765000-2, 3.890014-2, 3.890016-2, 4.038682-2, 4.038684-2, 4.064250-2, 4.064252-2, 4.073750-2, 4.109808-2, 4.109810-2, 4.141792-2, 4.141794-2, 4.246483-2, 4.246485-2, 4.270471-2, 4.270473-2, 4.300037-2, 4.300039-2, 4.382500-2, 4.474274-2, 4.474276-2, 4.555814-2, 4.555816-2, 4.691250-2, 4.722054-2, 4.722056-2, 4.793181-2, 4.793183-2, 4.801177-2, 4.801179-2, 5.000000-2, 5.007397-2, 5.007399-2, 5.312500-2, 5.393433-2, 5.393435-2, 5.496543-2, 5.496545-2, 5.512535-2, 5.512537-2, 5.625000-2, 5.829024-2, 5.829026-2, 5.870584-2, 5.870586-2, 5.910564-2, 5.910566-2, 5.937500-2, 5.964118-2, 5.964120-2, 6.250000-2, 6.280607-2, 6.280609-2, 6.296599-2, 6.296601-2, 6.362148-2, 6.362150-2, 6.560372-2, 6.560374-2, 6.875000-2, 6.979972-2, 6.979974-2, 7.011956-2, 7.011958-2, 7.407567-2, 7.407569-2, 7.500000-2, 7.699326-2, 7.699328-2, 8.102933-2, 8.102935-2, 8.125000-2, 8.150909-2, 8.150911-2, 8.580085-2, 8.580087-2, 8.620065-2, 8.620067-2, 8.750000-2, 8.929396-2, 8.929398-2, 9.375000-2, 9.380979-2, 9.380981-2, 9.893275-2, 9.893277-2, 1.000000-1, 1.014105-1, 1.014107-1, 1.025057-1, 1.025059-1, 1.062500-1, 1.081243-1, 1.081245-1, 1.086040-1, 1.086042-1, 1.091554-1, 1.091556-1, 1.125000-1, 1.147181-1, 1.147183-1, 1.166288-1, 1.166290-1, 1.187500-1, 1.227029-1, 1.227031-1, 1.239896-1, 1.239898-1, 1.242853-1, 1.242855-1, 1.250000-1, 1.273786-1, 1.273788-1, 1.299364-1, 1.299366-1, 1.316629-1, 1.316631-1, 1.375000-1, 1.383284-1, 1.383286-1, 1.399908-1, 1.399910-1, 1.403906-1, 1.403908-1, 1.420530-1, 1.420532-1, 1.431482-1, 1.431484-1, 1.476083-1, 1.476085-1, 1.500000-1, 1.556005-1, 1.556007-1, 1.563917-1, 1.563919-1, 1.572713-1, 1.572715-1, 1.625000-1, 1.644648-1, 1.644650-1, 1.739595-1, 1.739597-1, 1.747591-1, 1.747593-1, 1.750000-1, 1.822325-1, 1.822327-1, 1.875000-1, 1.917272-1, 1.917274-1, 2.000000-1, 2.002958-1, 2.002960-1, 2.009113-1, 2.009115-1, 2.112214-1, 2.112216-1, 2.114613-1, 2.114615-1, 2.138433-1, 2.138435-1, 2.144588-1, 2.144590-1, 2.154016-1, 2.154018-1, 2.187500-1, 2.189747-1, 2.189749-1, 2.205013-1, 2.205015-1, 2.325222-1, 2.325224-1, 2.326653-1, 2.326655-1, 2.367182-1, 2.367184-1, 2.375000-1, 2.385647-1, 2.385649-1, 2.410025-1, 2.410027-1, 2.531107-1, 2.531109-1, 2.544858-1, 2.544860-1, 2.562500-1, 2.590658-1, 2.590660-1, 2.624148-1, 2.624150-1, 2.750000-1, 2.759214-1, 2.759216-1, 2.759623-1, 2.759625-1, 2.764012-1, 2.764014-1, 2.773607-1, 2.773609-1, 2.804782-1, 2.804784-1, 2.847383-1, 2.847385-1, 2.937500-1, 2.997084-1, 2.997086-1, 3.004029-1, 3.004031-1, 3.028017-1, 3.028019-1, 3.079730-1, 3.079732-1, 3.125000-1, 3.237259-1, 3.237261-1, 3.237816-1, 3.237818-1, 3.253808-1, 3.253810-1, 3.260363-1, 3.260365-1, 3.312500-1, 3.321188-1, 3.321190-1, 3.493184-1, 3.493186-1, 3.500000-1, 3.501821-1, 3.501823-1, 3.571758-1, 3.571760-1, 3.752140-1, 3.752142-1, 3.752391-1, 3.752393-1, 3.831439-1, 3.831441-1, 3.875000-1, 4.023090-1, 4.023092-1, 4.024057-1, 4.024059-1, 4.026846-1, 4.026848-1, 4.035084-1, 4.035086-1, 4.035725-1, 4.035727-1, 4.043722-1, 4.043724-1, 4.100232-1, 4.100234-1, 4.250000-1, 4.313621-1, 4.313623-1, 4.313862-1, 4.313864-1, 4.366217-1, 4.366219-1, 4.378137-1, 4.378139-1, 4.598322-1, 4.598324-1, 4.603594-1, 4.603596-1, 4.608559-1, 4.608561-1, 4.613189-1, 4.613191-1, 4.622784-1, 4.622786-1, 4.665153-1, 4.665155-1, 4.899248-1, 4.899250-1, 4.946888-1, 4.946890-1, 4.960398-1, 4.960400-1, 4.961281-1, 4.961283-1, 5.000000-1, 5.212158-1, 5.212160-1, 5.229191-1, 5.229193-1, 5.266521-1, 5.266523-1, 5.533138-1, 5.533140-1, 5.533947-1, 5.533949-1, 5.580872-1, 5.580874-1, 5.861408-1, 5.861410-1, 5.862839-1, 5.862841-1, 5.904335-1, 5.904337-1, 6.202685-1, 6.202687-1, 6.203326-1, 6.203328-1, 6.211322-1, 6.211324-1, 6.236909-1, 6.236911-1, 6.249999-1, 6.250000-1, 6.250001-1, 2.000000+7 };

      //std::cout << finalE.size() << std::endl;
      //std::cout << correct_finalE.size() << std::endl;



      
      REQUIRE( true );
      
    } // WHEN
  } // GIVEN
} // TEST CASE
